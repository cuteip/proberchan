// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: config/http.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HttpConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// URL
	// IPv4 Address / IPv6 Address / FQDN / with port
	// "http://192.0.2.1", "http://2001:db8::1/health", "http://target1.example.com/ping", "http://target2.example.com:8080" ...
	// FQDN 指定されたときは、それで解決できるすべての IP アドレスに対して接続**しない**
	Targets    []string `protobuf:"bytes,1,rep,name=targets,proto3" json:"targets,omitempty"`
	IntervalMs int32    `protobuf:"varint,2,opt,name=interval_ms,json=intervalMs,proto3" json:"interval_ms,omitempty"`
	TimeoutMs  int32    `protobuf:"varint,3,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	// targets に FQDN が指定されたときに名前解決対象の IP バージョン
	// IPv4 シングルスタック環境であれば '4' のみ指定する
	// IPv6 シングルスタック環境であれば '6' のみ指定する
	// IPv4, IPv6 デュアルスタック環境であれば '4' と '6' の両方を指定する
	ResolveIpVersions []int32 `protobuf:"varint,4,rep,packed,name=resolve_ip_versions,json=resolveIpVersions,proto3" json:"resolve_ip_versions,omitempty"`
	UserAgent         string  `protobuf:"bytes,5,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
}

func (x *HttpConfig) Reset() {
	*x = HttpConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_config_http_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpConfig) ProtoMessage() {}

func (x *HttpConfig) ProtoReflect() protoreflect.Message {
	mi := &file_config_http_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpConfig.ProtoReflect.Descriptor instead.
func (*HttpConfig) Descriptor() ([]byte, []int) {
	return file_config_http_proto_rawDescGZIP(), []int{0}
}

func (x *HttpConfig) GetTargets() []string {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *HttpConfig) GetIntervalMs() int32 {
	if x != nil {
		return x.IntervalMs
	}
	return 0
}

func (x *HttpConfig) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

func (x *HttpConfig) GetResolveIpVersions() []int32 {
	if x != nil {
		return x.ResolveIpVersions
	}
	return nil
}

func (x *HttpConfig) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

var File_config_http_proto protoreflect.FileDescriptor

var file_config_http_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x16, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x65, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x22, 0xb5, 0x01, 0x0a, 0x0a,
	0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5f, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x4d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x4d, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x5f,
	0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x11, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x49, 0x70, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x63, 0x75, 0x74, 0x65, 0x69, 0x70, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x72, 0x63,
	0x68, 0x61, 0x6e, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_config_http_proto_rawDescOnce sync.Once
	file_config_http_proto_rawDescData = file_config_http_proto_rawDesc
)

func file_config_http_proto_rawDescGZIP() []byte {
	file_config_http_proto_rawDescOnce.Do(func() {
		file_config_http_proto_rawDescData = protoimpl.X.CompressGZIP(file_config_http_proto_rawDescData)
	})
	return file_config_http_proto_rawDescData
}

var file_config_http_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_config_http_proto_goTypes = []any{
	(*HttpConfig)(nil), // 0: proberchan.probes.http.HttpConfig
}
var file_config_http_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_config_http_proto_init() }
func file_config_http_proto_init() {
	if File_config_http_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_config_http_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*HttpConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_config_http_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_config_http_proto_goTypes,
		DependencyIndexes: file_config_http_proto_depIdxs,
		MessageInfos:      file_config_http_proto_msgTypes,
	}.Build()
	File_config_http_proto = out.File
	file_config_http_proto_rawDesc = nil
	file_config_http_proto_goTypes = nil
	file_config_http_proto_depIdxs = nil
}
